{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-matomo/lib/matomo-injector.service.ts","ng://ngx-matomo/lib/matomo-tracker.service.ts","ng://ngx-matomo/lib/matomo.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","MatomoInjector","platformId","this","isPlatformBrowser","window","_paq","console","warn","prototype","init","url","id","scriptUrl","skipTrackingInitialPageView","u","toString","d","document","g","createElement","s","getElementsByTagName","type","async","defer","src","parentNode","insertBefore","Injectable","Inject","args","PLATFORM_ID","MatomoTracker","ReferenceError","trackPageView","customTitle","trackEvent","category","action","name","trackSiteSearch","keyword","resultsCount","trackGoal","idGoal","customRevenue","trackLink","linkType","trackAllContentImpressions","trackVisibleContentImpressions","checkOnScroll","timeInterval","trackContentImpressionsWithinNode","node","trackContentInteractionNode","contentInteraction","trackContentImpression","contentName","contentPiece","contentTarget","trackContentInteraction","logAllContentBlocksOnPage","enableHeartBeatTimer","delay","enableLinkTracking","enable","enableCrossDomainLinking","setCrossDomainLinkingTimeout","timeout","setDocumentTitle","title","setDomains","domains","setCustomUrl","setReferrerUrl","setSiteId","siteId","setApiUrl","setTrackerUrl","getPiwikUrl","Promise","resolve","reject","getCurrentUrl","setDownloadClasses","classes","setDownloadExtensions","extensions","addDownloadExtensions","removeDownloadExtensions","setIgnoreClasses","setLinkClasses","setLinkTrackingTimer","getLinkTrackingTimer","discardHashTag","setGenerationTimeMs","generationTime","appendToTrackingUrl","appendToUrl","setDoNotTrack","doNotTrack","killFrame","redirectFile","setHeartBeatTimer","minimumVisitLength","heartBeatDelay","getVisitorId","getVisitorInfo","getAttributionInfo","getAttributionCampaignName","getAttributionCampaignKeyword","getAttributionReferrerTimestamp","getAttributionReferrerUrl","getUserId","setUserId","userId","resetUserId","setCustomVariable","index","scope","deleteCustomVariable","deleteCustomVariables","getCustomVariable","storeCustomVariablesInCookie","setCustomDimension","customDimensionId","customDimensionValue","deleteCustomDimension","getCustomDimension","setCampaignNameKey","setCampaignKeywordKey","setConversionAttributionFirstReferrer","conversionToFirstReferrer","setEcommerceView","productSKU","productName","productCategory","price","addEcommerceItem","quantity","trackEcommerceCartUpdate","grandTotal","trackEcommerceOrder","orderId","subTotal","tax","shipping","discount","disableCookies","deleteCookies","hasCookies","setCookieNamePrefix","prefix","setCookieDomain","domain","setCookiePath","path","setSecureCookie","secure","setVisitorCookieTimeout","setReferralCookieTimeout","setSessionCookieTimeout","addListener","element","setRequestMethod","method","setCustomRequestProcessing","callback","setRequestContentType","contentType","MatomoModule","NgModule","declarations","imports","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Access to the global window variable.\n */\ndeclare var window: {\n  [key: string]: any;\n  prototype: Window;\n  new (): Window;\n};\n\n/**\n * Service for injecting the Matomo tracker in the application.\n *\n * @export\n */\n@Injectable()\nexport class MatomoInjector {\n  /**\n   * Creates an instance of MatomoInjector.\n   *\n   * @param platformId Angular description of the platform.\n   */\n  constructor(@Inject(PLATFORM_ID) private platformId) {\n    if (isPlatformBrowser(this.platformId)) {\n      window._paq = window._paq || [];\n    } else {\n      console.warn('MatomoInjector can\\'t be used on server platform');\n    }\n  }\n\n  /**\n   * Injects the Matomo tracker in the DOM.\n   *\n   * @param url URL of the Matomo instance to connect to.\n   * @param id SiteId for this application/site.\n   * @param [scriptUrl] Optional URL for the `piwik.js`/`matomo.js` script in case it is not at its default location.\n   * @param [skipTrackingInitialPageView] Optional boolean which, if true, will prevent tracking the initial page as part of init\n   */\n  init(url: string, id: number, scriptUrl?: string, skipTrackingInitialPageView?: boolean) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!skipTrackingInitialPageView) {\n        window._paq.push(['trackPageView']);\n      }\n      window._paq.push(['enableLinkTracking']);\n      (() => {\n        const u = url;\n        window._paq.push(['setTrackerUrl', u + 'piwik.php']);\n        window._paq.push(['setSiteId', id.toString()]);\n        const d = document;\n        const g = d.createElement('script');\n        const s = d.getElementsByTagName('script')[0];\n        g.type = 'text/javascript';\n        g.async = true;\n        g.defer = true;\n        g.src = !!scriptUrl ? scriptUrl : u + 'piwik.js';\n        s.parentNode.insertBefore(g, s);\n      })();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Access to the global window variable.\n */\ndeclare var window: {\n  [key: string]: any;\n  prototype: Window;\n  new (): Window;\n};\n\n/**\n * Wrapper for functions available in the Matomo Javascript tracker.\n *\n * @export\n */\n@Injectable()\nexport class MatomoTracker {\n  /**\n   * Creates an instance of MatomoTracker.\n   */\n  constructor() {\n    try {\n      if (typeof window._paq === 'undefined') {\n        console.warn('Matomo has not yet been initialized! (Did you forget to inject it?)');\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Logs a visit to this page.\n   *\n   * @param [customTitle] Optional title of the visited page.\n   */\n  trackPageView(customTitle?: string): void {\n    try {\n      const args: any[] = [];\n      if (!!customTitle) {\n        args.push(customTitle);\n      }\n      window._paq.push(['trackPageView', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Logs an event with an event category (Videos, Music, Gamesâ¦), an event action (Play, Pause, Duration,\n   * Add Playlist, Downloaded, Clickedâ¦), and an optional event name and optional numeric value.\n   *\n   * @param category Category of the event.\n   * @param action Action of the event.\n   * @param [name] Optional name of the event.\n   * @param [value] Optional value for the event.\n   */\n  trackEvent(category: string, action: string, name?: string, value?: number): void {\n    try {\n      const args: any[] = [category, action];\n      if (!!name) {\n        args.push(name);\n      }\n      if (typeof value === 'number') {\n        args.push(value);\n      }\n      window._paq.push(['trackEvent', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Logs an internal site search for a specific keyword, in an optional category,\n   * specifying the optional count of search results in the page.\n   *\n   * @param keyword Keywords of the search query.\n   * @param [category] Optional category of the search query.\n   * @param [resultsCount] Optional number of results returned by the search query.\n   */\n  trackSiteSearch(keyword: string, category?: string, resultsCount?: number): void {\n    try {\n      const args: any[] = [keyword];\n      if (!!category) {\n        args.push(category);\n      }\n      if (typeof resultsCount === 'number') {\n        args.push(resultsCount);\n      }\n      window._paq.push(['trackSiteSearch', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Manually logs a conversion for the numeric goal ID, with an optional numeric custom revenue customRevenue.\n   *\n   * @param idGoal numeric ID of the goal to log a conversion for.\n   * @param [customRevenue] Optional custom revenue to log for the goal.\n   */\n  trackGoal(idGoal: number, customRevenue?: number): void {\n    try {\n      const args: any[] = [idGoal];\n      if (typeof customRevenue === 'number') {\n        args.push(customRevenue);\n      }\n      window._paq.push(['trackGoal', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Manually logs a click from your own code.\n   *\n   * @param url Full URL which is to be tracked as a click.\n   * @param linkType Either 'link' for an outlink or 'download' for a download.\n   */\n  trackLink(url: string, linkType: string): void {\n    try {\n      window._paq.push(['trackLink', url, linkType]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Scans the entire DOM for all content blocks and tracks all impressions once the DOM ready event has been triggered.\n   *\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackAllContentImpressions(): void {\n    try {\n      window._paq.push(['trackAllContentImpressions']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Scans the entire DOM for all content blocks as soon as the page is loaded.<br />\n   * It tracks an impression only if a content block is actually visible.\n   *\n   * @param checkOnScroll If true, checks for new content blocks while scrolling the page.\n   * @param timeInterval Duration, in milliseconds, between two checks upon scroll.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackVisibleContentImpressions(checkOnScroll: boolean, timeInterval: number): void {\n    try {\n      window._paq.push(['trackVisibleContentImpressions', checkOnScroll, timeInterval]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Scans the given DOM node and its children for content blocks and tracks an impression for them\n   * if no impression was already tracked for it.\n   *\n   * @param node DOM node in which to look for content blocks which have not been previously tracked.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentImpressionsWithinNode(node: Node): void {\n    try {\n      window._paq.push(['trackContentImpressionsWithinNode', node]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Tracks an interaction with the given DOM node/content block.\n   *\n   * @param node DOM node for which to track a content interaction.\n   * @param contentInteraction Name of the content interaction.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentInteractionNode(node: Node, contentInteraction: string): void {\n    try {\n      window._paq.push(['trackContentInteractionNode', node, contentInteraction]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Tracks a content impression using the specified values.\n   *\n   * @param contentName Content name.\n   * @param contentPiece Content piece.\n   * @param contentTarget Content target.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentImpression(contentName: string, contentPiece: string, contentTarget: string): void {\n    try {\n      window._paq.push(['trackContentImpression', contentName, contentPiece, contentTarget]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Tracks a content interaction using the specified values.\n   *\n   * @param contentInteraction Content interaction.\n   * @param contentName Content name.\n   * @param contentPiece Content piece.\n   * @param contentTarget Content target.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentInteraction(\n    contentInteraction: string,\n    contentName: string,\n    contentPiece: string,\n    contentTarget: string\n  ): void {\n    try {\n      window._paq.push([\n        'trackContentInteraction',\n        contentInteraction,\n        contentName,\n        contentPiece,\n        contentTarget\n      ]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Logs all found content blocks within a page to the console. This is useful to debug / test content tracking.\n   */\n  logAllContentBlocksOnPage(): void {\n    try {\n      window._paq.push(['logAllContentBlocksOnPage']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Install a Heart beat timer that will regularly send requests to Matomo in order to better measure the time spent on the page.<br />\n   * These requests will be sent only when the user is actively viewing the page (when the tab is active and in focus).<br />\n   * These requests will not track additional actions or page views.<br />\n   * By default, the delay is set to 15 seconds.\n   *\n   * @param delay Delay, in seconds, between two heart beats to the server.\n   */\n  enableHeartBeatTimer(delay: number): void {\n    try {\n      window._paq.push(['enableHeartBeatTimer', delay]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Installs link tracking on all applicable link elements.\n   *\n   * @param enable Set the enable parameter to true to use pseudo click-handler (treat middle click and open contextmenu as\n   * left click).<br />\n   * A right click (or any click that opens the context menu) on a link will be tracked as clicked even if \"Open in new tab\"\n   * is not selected.<br />\n   * If \"false\" (default), nothing will be tracked on open context menu or middle click.\n   */\n  enableLinkTracking(enable: boolean): void {\n    try {\n      window._paq.push(['enableLinkTracking', enable]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Enables cross domain linking. By default, the visitor ID that identifies a unique visitor is stored in the browser's\n   * first party cookies.<br />\n   * This means the cookie can only be accessed by pages on the same domain.<br />\n   * If you own multiple domains and would like to track all the actions and pageviews of a specific visitor into the same visit,\n   * you may enable cross domain linking.<br />\n   * Whenever a user clicks on a link it will append a URL parameter pk_vid to the clicked URL which forwards the current\n   * visitor ID value to the page of the different domain.\n   *\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  enableCrossDomainLinking(): void {\n    try {\n      window._paq.push(['enableCrossDomainLinking']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * By default, the two visits across domains will be linked together when the link is clicked and the page is loaded within\n   * a 180 seconds timeout window.\n   *\n   * @param timeout Timeout, in seconds, between two actions across two domanes before creating a new visit.\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  setCrossDomainLinkingTimeout(timeout: number): void {\n    try {\n      window._paq.push(['setCrossDomainLinkingTimeout', timeout]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Overrides document.title\n   *\n   * @param title Title of the document.\n   */\n  setDocumentTitle(title: string): void {\n    try {\n      window._paq.push(['setDocumentTitle', title]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets array of hostnames or domains to be treated as local.<br />\n   * For wildcard subdomains, you can use: `setDomains('.example.com')`; or `setDomains('*.example.com');`.<br />\n   * You can also specify a path along a domain: `setDomains('*.example.com/subsite1');`.\n   *\n   * @param domains List of hostnames or domains, with or without path, to be treated as local.\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  setDomains(domains: string[]): void {\n    try {\n      window._paq.push(['setDomains', domains]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Override the page's reported URL.\n   *\n   * @param url URL to be reported for the page.\n   */\n  setCustomUrl(url: string): void {\n    try {\n      window._paq.push(['setCustomUrl', url]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Overrides the detected Http-Referer.\n   *\n   * @param url URL to be reported for the referer.\n   */\n  setReferrerUrl(url: string): void {\n    try {\n      window._paq.push(['setReferrerUrl', url]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Specifies the website ID.<br />\n   * Redundant: can be specified in getTracker() constructor.\n   *\n   * @param siteId Site ID for the tracker.\n   */\n  setSiteId(siteId: number): void {\n    try {\n      window._paq.push(['setSiteId', siteId]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Specify the Matomo HTTP API URL endpoint. Points to the root directory of matomo,\n   * e.g. http://matomo.example.org/ or https://example.org/matomo/.<br />\n   * This function is only useful when the 'Overlay' report is not working.<br />\n   * By default, you do not need to use this function.\n   *\n   * @param url URL for Matomo HTTP API endpoint.\n   */\n  setApiUrl(url: string): void {\n    try {\n      window._paq.push(['setApiUrl', url]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Specifies the Matomo server URL.<br />\n   * Redundant: can be specified in getTracker() constructor.\n   *\n   * @param url URL for the Matomo server.\n   */\n  setTrackerUrl(url: string): void {\n    try {\n      window._paq.push(['setTrackerUrl', url]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Returns the Matomo server URL.\n   *\n   * @returns Promise for the Matomo server URL.\n   */\n  getPiwikUrl(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getPiwikUrl());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the current url of the page that is currently being visited.<br />\n   * If a custom URL was set before calling this method, the custom URL will be returned.\n   *\n   * @returns Promise for the URL of the current page.\n   */\n  getCurrentUrl(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getCurrentUrl());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets classes to be treated as downloads (in addition to piwik_download).\n   *\n   * @param classes Class, or list of classes to be treated as downloads.\n   */\n  setDownloadClasses(classes: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', classes]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets list of file extensions to be recognized as downloads.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions to be recognized as downloads.\n   */\n  setDownloadExtensions(extensions: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', extensions]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets additional file extensions to be recognized as downloads.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions to be recognized as downloads.\n   */\n  addDownloadExtensions(extensions: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', extensions]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets file extensions to be removed from the list of download file extensions.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions not to be recognized as downloads.\n   */\n  removeDownloadExtensions(extensions: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', extensions]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets classes to be ignored if present in link (in addition to piwik_ignore).\n   *\n   * @param classes Class, or list of classes to be ignored if present in link.\n   */\n  setIgnoreClasses(classes: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', classes]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Set classes to be treated as outlinks (in addition to piwik_link).\n   *\n   * @param classes Class, or list of classes to be treated as outlinks.\n   */\n  setLinkClasses(classes: string | string[]): void {\n    try {\n      window._paq.push(['setDownloadClasses', classes]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Set delay for link tracking (in milliseconds).\n   *\n   * @param delay Delay, in milliseconds, for link tracking.\n   */\n  setLinkTrackingTimer(delay: number): void {\n    try {\n      window._paq.push(['setLinkTrackingTimer', delay]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Returns delay for link tracking.\n   *\n   * @returns Promise for the delay in milliseconds.\n   */\n  getLinkTrackingTimer(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getLinkTrackingTimer());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Set to true to not record the hash tag (anchor) portion of URLs.\n   *\n   * @param value If true, the hash tag portion of the URLs won't be recorded.\n   */\n  discardHashTag(value: boolean): void {\n    try {\n      window._paq.push(['discardHashTag', value]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * By default Matomo uses the browser DOM Timing API to accurately determine the time it takes to generate and download\n   * the page. You may overwrite this value with this function.\n   *\n   * @param generationTime Time, in milliseconds, of the page generation.\n   */\n  setGenerationTimeMs(generationTime: number): void {\n    try {\n      window._paq.push(['setGenerationTimeMs', generationTime]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Appends a custom string to the end of the HTTP request to piwik.php.\n   *\n   * @param appendToUrl String to append to the end of the HTTP request to piwik.php/matomo.php.\n   */\n  appendToTrackingUrl(appendToUrl: string): void {\n    try {\n      window._paq.push(['appendToTrackingUrl', appendToUrl]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Set to true to not track users who opt out of tracking using Mozilla's (proposed) Do Not Track setting.\n   *\n   * @param doNotTrack If true, users who opted for Do Not Track in their settings won't be tracked.\n   * @see {@link https://www.w3.org/TR/tracking-dnt/}\n   */\n  setDoNotTrack(doNotTrack: boolean): void {\n    try {\n      window._paq.push(['setDoNotTrack', doNotTrack]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Enables a frame-buster to prevent the tracked web page from being framed/iframed.\n   */\n  killFrame(): void {\n    try {\n      window._paq.push(['killFrame']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Forces the browser to load the live URL if the tracked web page is loaded from a local file\n   * (e.g., saved to someone's desktop).\n   *\n   * @param url URL to track instead of file:// URLs.\n   */\n  redirectFile(url: string): void {\n    try {\n      window._paq.push(['redirectFile', url]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Records how long the page has been viewed if the minimumVisitLength is attained;\n   * the heartBeatDelay determines how frequently to update the server.\n   *\n   * @param minimumVisitLength Duration before notifying the server for the duration of the visit to a page.\n   * @param heartBeatDelay Delay, in seconds, between two updates to the server.\n   */\n  setHeartBeatTimer(minimumVisitLength: number, heartBeatDelay: number): void {\n    try {\n      window._paq.push(['setHeartBeatTimer', minimumVisitLength, heartBeatDelay]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Returns the 16 characters ID for the visitor.\n   *\n   * @returns Promise for the the 16 characters ID for the visitor.\n   */\n  getVisitorId(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getVisitorId());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the visitor cookie contents in an array.\n   *\n   * @returns Promise for the cookie contents in an array.\n   */\n  getVisitorInfo(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getVisitorInfo());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the visitor attribution array (Referer information and/or Campaign name & keyword).<br />\n   * Attribution information is used by Matomo to credit the correct referrer (first or last referrer)\n   * used when a user triggers a goal conversion.\n   *\n   * @returns Promise for the visitor attribution array (Referer information and/or Campaign name & keyword).\n   */\n  getAttributionInfo(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getAttributionInfo());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the attribution campaign name.\n   *\n   * @returns Promise for the the attribution campaign name.\n   */\n  getAttributionCampaignName(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getAttributionCampaignName());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the attribution campaign keyword.\n   *\n   * @returns Promise for the attribution campaign keyword.\n   */\n  getAttributionCampaignKeyword(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getAttributionCampaignKeyword());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the attribution referrer timestamp.\n   *\n   * @returns Promise for the attribution referrer timestamp (as string).\n   */\n  getAttributionReferrerTimestamp(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getAttributionReferrerTimestamp());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the attribution referrer URL.\n   *\n   * @returns Promise for the attribution referrer URL\n   */\n  getAttributionReferrerUrl(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getAttributionReferrerUrl());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns the User ID string if it was set.\n   *\n   * @returns Promise for the User ID for the visitor.\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  getUserId(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getUserId());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets a User ID to this user (such as an email address or a username).\n   *\n   * @param userId User ID to set for the current visitor.\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  setUserId(userId: string): void {\n    try {\n      window._paq.push(['setUserId', userId]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Resets the User ID which also generates a new Visitor ID.\n   *\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  resetUserId(): void {\n    try {\n      window._paq.push(['resetUserId']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets a custom variable.\n   *\n   * @param index Index, the number from 1 to 5 where this custom variable name is stored for the current page view.\n   * @param name Name, the name of the variable, for example: Category, Sub-category, UserType.\n   * @param value Value, for example: \"Sports\", \"News\", \"World\", \"Business\"â¦\n   * @param scope Scope of the custom variable:<br />\n   * - \"page\" means the custom variable applies to the current page view.\n   * - \"visit\" means the custom variable applies to the current visitor.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  setCustomVariable(index: number, name: string, value: string, scope: string): void {\n    try {\n      window._paq.push(['setCustomVariable', index, name, value, scope]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Deletes a custom variable.\n   *\n   * @param index Index of the custom variable to delete.\n   * @param scope Scope of the custom variable to delete.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  deleteCustomVariable(index: number, scope: string): void {\n    try {\n      window._paq.push(['deleteCustomVariable', index, scope]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Deletes all custom variables.\n   *\n   * @param scope Scope of the custom variables to delete.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  deleteCustomVariables(scope: string): void {\n    try {\n      window._paq.push(['deleteCustomVariables', scope]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Retrieves a custom variable.\n   *\n   * @param index Index of the custom variable to retrieve.\n   * @param scope Scope of the custom variable to retrieve.\n   * @returns Promise for the value of custom variable.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  getCustomVariable(index: number, scope: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getCustomVariable(index, scope));\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * When called then the Custom Variables of scope \"visit\" will be stored (persisted) in a first party cookie\n   * for the duration of the visit.<br />\n   * This is useful if you want to call getCustomVariable later in the visit.<br />\n   * (by default custom variables are not stored on the visitor's computer.)\n   *\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  storeCustomVariablesInCookie(): void {\n    try {\n      window._paq.push(['storeCustomVariablesInCookie']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets a custom dimension.<br />\n   * (requires Matomo 2.15.1 + Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to set.\n   * @param customDimensionValue Value to be set.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  setCustomDimension(customDimensionId: number, customDimensionValue: string): void {\n    try {\n      window._paq.push(['setCustomDimension', customDimensionId, customDimensionValue]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Deletes a custom dimension.<br />\n   * (requires Matomo 2.15.1 + Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to delete.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  deleteCustomDimension(customDimensionId: number): void {\n    try {\n      window._paq.push(['deleteCustomDimension', customDimensionId]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Retrieve a custom dimension.<br />\n   * (requires Matomo 2.15.1 + Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to retrieve.\n   * @returns Promise for the value for the requested custom dimension.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  getCustomDimension(customDimensionId: number): Promise<string> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.getCustomDimension(customDimensionId));\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets campaign name parameter(s).\n   *\n   * @param name Name of the campaign\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   */\n  setCampaignNameKey(name: string): void {\n    try {\n      window._paq.push(['setCampaignNameKey', name]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets campaign keyword parameter(s).\n   *\n   * @param keyword Keyword parameter(s) of the campaign.\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   */\n  setCampaignKeywordKey(keyword: string): void {\n    try {\n      window._paq.push(['setCampaignKeywordKey', keyword]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Set to true to attribute a conversion to the first referrer.<br />\n   * By default, conversion is attributed to the most recent referrer.\n   *\n   * @param conversionToFirstReferrer If true, Matomo will attribute the Goal conversion to the first referrer used\n   * instead of the last one.\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   * @see {@link https://matomo.org/faq/general/faq_106/#faq_106|Conversions to the first referrer}\n   */\n  setConversionAttributionFirstReferrer(conversionToFirstReferrer: boolean): void {\n    try {\n      window._paq.push(['setConversionAttributionFirstReferrer', conversionToFirstReferrer]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the current page view as a product or category page view.<br />\n   * When you call setEcommerceView, it must be followed by a call to trackPageView to record the product or category page view.\n   *\n   * @param productSKU SKU of the viewed product.\n   * @param productName Name of the viewed product.\n   * @param productCategory Category of the viewed product.\n   * @param price Price of the viewed product.\n   */\n  setEcommerceView(\n    productSKU: string,\n    productName: string,\n    productCategory: string,\n    price: number\n  ): void {\n    try {\n      window._paq.push(['setEcommerceView', productSKU, productName, productCategory, price]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Adds a product into the eCommerce order.<br />\n   * Must be called for each product in the order.\n   *\n   * @param productSKU SKU of the product to add.\n   * @param [productName] Optional name of the product to add.\n   * @param [productCategory] Optional category of the product to add.\n   * @param [price] Optional price of the product to add.\n   * @param [quantity] Optional quantity of the product to add.\n   */\n  addEcommerceItem(\n    productSKU: string,\n    productName?: string,\n    productCategory?: string,\n    price?: number,\n    quantity?: number\n  ): void {\n    try {\n      const args: any[] = [productSKU];\n      if (!!productName) {\n        args.push(productName);\n      }\n      if (!!productCategory) {\n        args.push(productCategory);\n      }\n      if (typeof price === 'number') {\n        args.push(price);\n      }\n      if (typeof quantity === 'number') {\n        args.push(quantity);\n      }\n      window._paq.push(['addEcommerceItem', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Tracks a shopping cart.<br />\n   * Call this javascript function every time a user is adding, updating or deleting a product from the cart.\n   *\n   * @param grandTotal Grand total of the shopping cart.\n   */\n  trackEcommerceCartUpdate(grandTotal: number): void {\n    try {\n      window._paq.push(['trackEcommerceCartUpdate', grandTotal]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Tracks an Ecommerce order, including any eCommerce item previously added to the order.<br />\n   * orderId and grandTotal (ie.revenue) are required parameters.\n   *\n   * @param orderId ID of the tracked order.\n   * @param grandTotal Grand total of the tracked order.\n   * @param [subTotal] Sub total of the tracked order.\n   * @param [tax] Taxes for the tracked order.\n   * @param [shipping] Shipping fees for the tracked order.\n   * @param [discount] Discount granted for the tracked order.\n   */\n  trackEcommerceOrder(\n    orderId: string,\n    grandTotal: number,\n    subTotal?: number,\n    tax?: number,\n    shipping?: number,\n    discount?: number\n  ): void {\n    try {\n      const args: any[] = [orderId, grandTotal];\n      if (typeof subTotal === 'number') {\n        args.push(subTotal);\n      }\n      if (typeof tax === 'number') {\n        args.push(tax);\n      }\n      if (typeof shipping === 'number') {\n        args.push(shipping);\n      }\n      if (typeof discount === 'number') {\n        args.push(discount);\n      }\n      window._paq.push(['trackEcommerceOrder', ...args]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Disables all first party cookies.<br />\n   * Existing Matomo cookies for this websites will be deleted on the next page view.\n   */\n  disableCookies(): void {\n    try {\n      window._paq.push(['disableCookies']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Deletes the tracking cookies currently set (useful when creating new visits).\n   */\n  deleteCookies(): void {\n    try {\n      window._paq.push(['deleteCookies']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Returns whether cookies are enabled and supported by this browser.\n   *\n   * @returns Promise for the support and activation of cookies.\n   */\n  hasCookies(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      try {\n        window._paq.push([\n          function() {\n            resolve(this.hasCookies());\n          }\n        ]);\n      } catch (e) {\n        if (!(e instanceof ReferenceError)) {\n          reject(e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets the tracking cookie name prefix.<br />\n   * Default prefix is 'pk'.\n   *\n   * @param prefix Prefix for the tracking cookie names.\n   */\n  setCookieNamePrefix(prefix: string): void {\n    try {\n      window._paq.push(['setCookieNamePrefix', prefix]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the domain of the tracking cookies.<br />\n   * Default is the document domain.<br />\n   * If your website can be visited at both www.example.com and example.com, you would use: `'.example.com'` or `'*.example.com'`.\n   *\n   * @param domain Domain of the tracking cookies.\n   */\n  setCookieDomain(domain: string): void {\n    try {\n      window._paq.push(['setCookieDomain', domain]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the path of the tracking cookies.<br />\n   * Default is '/'.\n   *\n   * @param path Path of the tracking cookies.\n   */\n  setCookiePath(path: string): void {\n    try {\n      window._paq.push(['setCookiePath', path]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Set to true to enable the Secure cookie flag on all first party cookies.<br />\n   * This should be used when your website is only available under HTTPS so that all tracking cookies are always sent\n   * over secure connection.\n   *\n   * @param secure If true, the secure cookie flag will be set on all first party cookies.\n   */\n  setSecureCookie(secure: boolean): void {\n    try {\n      window._paq.push(['setSecureCookie', secure]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the visitor cookie timeout.<br />\n   * Default is 13 months.\n   *\n   * @param timeout Timeout, in seconds, for the visitor cookie timeout.\n   */\n  setVisitorCookieTimeout(timeout: number): void {\n    try {\n      window._paq.push(['setVisitorCookieTimeout', timeout]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the referral cookie timeout.<br />\n   * Default is 6 months.\n   *\n   * @param timeout Timeout, in seconds, for the referral cookie timeout.\n   */\n  setReferralCookieTimeout(timeout: number): void {\n    try {\n      window._paq.push(['setReferralCookieTimeout', timeout]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the session cookie timeout.<br />\n   * Default is 30 minutes.\n   *\n   * @param timeout Timeout, in seconds, for the session cookie timeout.\n   */\n  setSessionCookieTimeout(timeout: number): void {\n    try {\n      window._paq.push(['setSessionCookieTimeout', timeout]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Adds a click listener to a specific link element.<br />\n   * When clicked, Matomo will log the click automatically.\n   *\n   * @param element Element on which to add a click listener.\n   */\n  addListener(element: Element): void {\n    try {\n      window._paq.push(['addListener', element]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets the request method to either \"GET\" or \"POST\". (The default is \"GET\".)<br />\n   * To use the POST request method, either:<br />\n   * 1) the Matomo host is the same as the tracked website host (Matomo installed in the same domain as your tracked website), or<br />\n   * 2) if Matomo is not installed on the same host as your website, you need to enable CORS (Cross domain requests).\n   *\n   * @param method HTTP method for sending information to the Matomo server.\n   */\n  setRequestMethod(method: string): void {\n    try {\n      window._paq.push(['setRequestMethod', method]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets a function that will process the request content.<br />\n   * The function will be called once the request (query parameters string) has been prepared, and before the request content is sent.\n   *\n   * @param callback Function that will process the request content.\n   */\n  setCustomRequestProcessing(callback: (queryParameters: string) => void): void {\n    try {\n      window._paq.push(['setCustomRequestProcessing', callback]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets request Content-Type header value.<br />\n   * Applicable when \"POST\" request method is used via setRequestMethod.\n   *\n   * @param contentType Value for Content-Type HTTP header.\n   */\n  setRequestContentType(contentType: string): void {\n    try {\n      window._paq.push(['setRequestContentType', contentType]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatomoInjector } from './matomo-injector.service';\nimport { MatomoTracker } from './matomo-tracker.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [MatomoInjector, MatomoTracker]\n})\nexport class MatomoModule {}\n"]}